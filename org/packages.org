#+TITLE: Packages
#+STARTUP: indent
#+TODO: (a) | DISABLED(d)

* DISABLED Straight
#+BEGIN_SRC emacs-lisp
(defvar bootstrap-version)
(let ((bootstrap-file
       (expand-file-name "straight/repos/straight.el/bootstrap.el" user-emacs-directory))
      (bootstrap-version 5))
  (unless (file-exists-p bootstrap-file)
    (with-current-buffer
        (url-retrieve-synchronously
         "https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el"
         'silent 'inhibit-cookies)
      (goto-char (point-max))
      (eval-print-last-sexp)))
  (load bootstrap-file nil 'nomessage))
(straight-use-package 'use-package)
(setq straight-use-package-by-default t)
#+END_SRC
* Use-Package
#+BEGIN_SRC emacs-lisp
(setq package-enable-at-startup nil)
(require 'package)
(let* ((no-ssl (and (memq system-type '(windows-nt ms-dos))
                    (not (gnutls-available-p))))
       (proto (if no-ssl "http" "https")))
  ;; Comment/uncomment these two lines to enable/disable MELPA and MELPA Stable as desired
  (add-to-list 'package-archives (cons "melpa" (concat proto "://melpa.org/packages/")) t))
(package-initialize)
(eval-when-compile
  (require 'use-package))
(setq use-package-always-ensure t) 
(use-package diminish
:ensure t
:defer t)
(use-package delight
:ensure t
:defer t)
#+END_SRC
* Auto-update
#+BEGIN_SRC emacs-lisp
(use-package auto-package-update
  :ensure t
    :defer t
  :config
  (setq auto-package-update-delete-old-versions t)
  (setq auto-package-update-hide-results t)
  (auto-package-update-maybe))
#+END_SRC
* WhichKey
#+BEGIN_SRC emacs-lisp
(use-package which-key
:defer t
:ensure t
:config (which-key-mode))
#+END_SRC

* FZF
#+BEGIN_SRC emacs-lisp
(use-package fzf
:defer t
:ensure t
:bind ("C-x C-r" . 'fzf-git))
#+END_SRC

* Color MOccur
#+BEGIN_SRC emacs-lisp
(use-package color-moccur
  :ensure t
  :defer t
    :commands (isearch-moccur isearch-all)
  :bind (("M-s O" . moccur)
         :map isearch-mode-map
         ("M-o" . isearch-moccur)
         ("M-O" . isearch-moccur-all))
  :init
  (setq isearch-lazy-highlight t)
  :config
  (use-package moccur-edit))
#+END_SRC
* Helm
#+BEGIN_SRC emacs-lisp
(use-package helm
  :ensure t
    :bind (("M-x" . helm-M-x)))
#+END_SRC

* PDF Tools
#+BEGIN_SRC emacs-lisp
(use-package pdf-tools
  :load-path "site-lisp/pdf-tools/lisp"
  :magic ("%PDF" . pdf-view-mode)
  :ensure t
  :defer t
  :config
  (pdf-tools-install))
#+END_SRC
